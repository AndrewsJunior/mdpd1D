%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%           A Hybrid Method For Density Power Divergence Minimization With Application To Robust.     %
%                            Univariate Location And Scale Estimation                                 %
%               Copyright: (C) Andrews T. Anum and Michael Pokojovy (2022)                            %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Instructions:

The Matlab program runtimecheck.m computes the average runtime and runtime standard deviation (in parentheses), both in 
seconds, for MDPD (GD) and hybrid MDPD (GD/NM) applied to contaminated data using non-robust warmstart. 
Similarly, runtimecheckRobust.m uses robust warmstart and returns the average runtime and runtime standard deviation (in parentheses), 
both in seconds, for MDPD (GD) and hybrid MDPD (GD/NM) applied to clean data.

The Matlab program runtimecheckuncontaminated.m computed the average runtime and runtime standard deviation (in parentheses), 
both in seconds, for MDPD (GD) and hybrid MDPD (GD/NM) applied to contaminated data using non-robust warmstart. 
Sinikarly, runtimecheckuncontaminatedRobust.m uses robust warmstart and returns the average runtime and runtime standard deviation (in 
parentheses), both in seconds, for MDPD (GD) and hybrid MDPD (GD/NM) applied to clean data.
